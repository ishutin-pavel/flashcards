:args;Показать все файлы из списка аргументов
:args **/*.html;Добавить файлы в список аргументов
:fir[st];Перейти к ПЕРВОМУ файлу из списка аргументов
:la[st];Перейти к ПОСЛЕДНЕМУ файлу из списка аргументов
:n[ext];Перейти к СЛЕДУЮЩЕМУ файлу из списка аргументов
:prev[ious];Перейти к ПРЕДЫДУЩЕМУ файлу из списка аргументов
:argdo {cmd};Выполнить команду для всех файлов из списка аргументов
:argdo w[rite];Сохранить все файлы из списка аргументов
##;Символ-ссылка на набор файлов из списка аргументов
:vim /text/g ##;Найти 'text' в файлах из списка аргументов
:argdo source batch.vim;Выполнить набор команд из файла batch.vim для каждого файла из списка аргументов
:ls;Список буферов
:b {name};Открыть буфер по имени
:b name{tab};Открыть буфер по имени с подсказкой
:bd;Удалить буфер
:bm;Перейти к не сохранённому буферу (modified)
:bufdo {cmd};Выполнить команду для всех буферов
:bufdo tab split;Открыть каждый буфер в новой вкладке
:sp[lit] file;Открыть буфер в гор. окне
:vs[plit] file;Открыть буфер в верт. окне
:bn;Перейти к СЛЕДУЮЩЕМУ буферу
:bp;Перейти к ПРЕДЫДУЩЕМУ буферу
:bf[irst];Перейти к ПЕРВОМУ буферу
:bl[ast];Перейти к ПОСЛЕДНЕМУ буферу
:b5;Перейти к 5-му буферу
<C-r>=50/16.0 (режим вставки);Разделить 54 на 16 без округления (режим вставки)
5<C-a>;Прибавить 5 к числу справа от курсора
10<C-x>;Вычесть 10 от числа слева от курсора
zf{motion};Определить складку
zc;Свернуть складку
zo;Развернуть складку
zd;Удалить складку
zk;Вверх - перемещение по складкам
zj;Вниз - перемещение по складкам
zE;Удалить все складки
zR;Открыть все складки
zM;Свернуть все складки
<C-o>;Вернуться назад
<C-i>;Вернуться вперед
5G;Перейти к строке 5
:5;Перейти к строке 5
gi;В последнее место ввода
%;Прыжки по парным скобкам
"g;";Перемещение по местам правок ВПЕРЕД
"g,";Перемещение по местам правок НАЗАД
<C-]>;Перейти к определению слова под курсором
gf;Перейти к файлу под курсором
:changes;Показать изменённые строки
:ju[mps];Список прыжков
:marks;Список меток
m{a-zA-Z};Поставить метку
`{a-zA-Z};Перейти к метке точно
'{a-zA-Z};Перейти к строке с меткой
:delm[arks] a;Удалить метку a
:delm[arks]!;Удалить все локальные метки
`. (метки);Последнее место правки в текущем буфере
A-Z (метки);Глобальные метки доступны из любого буфера
a-z (метки);Локальнае метки доступны только в текущем буфере
0-9 (метки);Последние редактируемые файлы перед выходом из Vim
`0 (глобальная метка);Последний редактируемый файл перед выходом из Vim(`0-`9)
`[ и `] (метки);Начало и конец последнего изменения или копирования текста
`< и `> (метки);Начало и конец последнего выделения
w;Вперёд на слово
W;Вперёд на СЛОВО
b;Назад на слово
B;Назад на СЛОВО
f{char};Вперёд к символу
F{char};Назад к символу
t{char};Вперёд до символа
T{char};Назад до символа
};Вперёд к параграфу
{;Назад к параграфу
);Вперёд к предложению
(;Назад к предложению
]) или ]};Перейти к следующей незакрытой скобке
[( или [{;Перейти к предыдущей незакрытой скобке
";";Повтор вперёд к/до символа
,;Повтор назад к/до символа
$;В конец строки
0 ноль;В начало строки
^;К первому непробельному символу в строке
e;Вперёд к концу слова
ge;Назад к концу слова
gE;Назад к концу СЛОВА
j;На одну фактическую строку вниз
gj;На одну экранную строку вниз
k;На одну фактическую строку вверх
gk;На одну экранную строку вверх
g$;К концу экранной строки
:e. (netrw);Открыть менеджер в корневом каталоге
:E[xplore] (netrw);Открыть менеджер с корнем в папке текущего файла
:Sex[plore] (netrw);Открыть менеджер в гор. окне выше
:Hex[plore] (netrw);Открыть менеджер в гор. окне ниже
:Lex[plore] (netrw);Открыть/закрыть менеджер слева на всю высоту
:Vex[plore] (netrw);Открыть менеджер в вертикальном окне
:Tex[plore] (netrw);Открыть менеджер в новой вкладке
v (netrw);Открыть файл в верт. окне
o (netrw);Открыть файл в гор. окне
t (netrw);Открыть файл во вкладке
p (netrw);Быстрый просмотр файла
:pc (netrw);Закрыть окно быстрого просмотра
% (netrw);Создать и открыть файл
d (netrw);Создать папку
R (netrw);Переименовать
D (netrw);Удалить файл/папку
- (netrw);Вверх
i (netrw);Переключить вид
<C-^> (netrw);Переключиться с netrw на буфер и обратно
mt (netrw);Пометить целевую папку
mf (netrw);Пометить/Снять метку с файла
cd (netrw);Сделать корневой папкой
mc (netrw);Копировать помеченные файлы в целевую папку
mm (netrw);Переместить помеченные файлы в целевую папку
md (netrw);Сравнить отмеченные файлы
mz (netrw);Сжать/Распаковать каждый помеченный файл file.gz
mF (netrw);Сбросить выделение со всех файлов в папке
mu (netrw);Сбросить выделение со всех файлов глобально
mb (netrw);Создать закладку на текущей папке
gb (netrw);Перейти к закладке
:copen;Открыть окно quickfix list
:cclose;Закрыть окно quickfix list
:cn[ext];Следущая запись в quickfix list
:cp[rev];Предыдущая запись в quickfix list
:cnf[ile];Следующий файл в quickfix list
:cpf[ile];Предыдущий файл в quickfix list
:cfir[st];Первая запись в quickfix list
:cla[st];Последняя запись в quickfix list
:chistory;История списков quickfix list
:colder;Предыдущий список quickfix list
:cnewer;Следующий список quickfix list
:vimgrep :grep :make;Команды заполнения листа quickfix list
:vim /text/ **;Заполнить quickfix list из поиска :vim[grep]
:grep Waldo *.md;Заполнить quickfix list из поиска команды :grep
:cdo {cmd};Применяет команду {cmd} к каждой строке в списке результатов quickfix list
:cfdo {cmd};Применяет команду {cmd} один раз к каждому файлу в списке результатов quickfix list
/text;Поиск ВПЕРЁД слова 'text' в текущем буфере
?text;Поиск НАЗАД слова 'text' в текущем буфере
*;Поиск ВПЕРЁД слова под курсором
#;Поиск НАЗАД слова под курсором
g*;Поиск ВПЕРЁД слова под курсором без использования '\<' и '\>'
g#;Поиск НАЗАД слова под курсором без использования '\<' и '\>'
n;Следующее совпадение
N;Предыдущее совпадение
gn;Выделить следующее совпадение
gN;Выделить предыдущее совпадение
\zs;Маркер начала совпадения
\ze;Маркер конца совпадения
:%s/text//gn;Подсчет количества совпадений командой :substitute
n флаг :substitute;Не делать замену
g флаг :substitute;Сделать замену во всех совпадениях в буфере
c флаг :substitute;Запросить подтверждение перед каждой заменой
:vim[grep] /text/g %;Команда позволяет узнать номер совпадения например 3 из 5.
:vim[grep] /text/ **/*.txt;Поиск во всех файлах в текущем проекте
:vim /text/ **;Заполнить quickfix list из поиска :vim[grep]
:grep Waldo *.md;Запуск встроенной в Vim команды :grep
:vim[grep][!] /{pattern}/[g][j] {file};Синтаксис команды :vimgrep
j флаг :vim[grep];Не переходить к файлу с первым совпадением. Не прыгать jump.
g флаг :vim[grep];Без флага 'g' каждая строка будет добавлена один раз. С 'g' будет добавлено каждое совпадение.
:set spell;Включить проверку орфографии (Ex: режим)
]s;К следующей ошибке (командный режим)
[s;К предыдущей ошибке (командный режим)
z=;Показать варианты исправления ошибки (командный режим)
1z=;Исправить ошибку первым вариантом (командный режим)
<C-x>s или <C-x><C-s>;Показать варианты исправлений (режим вставки)
<C-n>;Вниз - в выпадающем списке (режим вставки)
<C-p>;Вверх - в выпадающем списке (режим вставки)
Esc или <C-[>;Закрыть выпадающий список (режим вставки)
zg;Добавить текущее слово в словарь (командный режим)
zug;Отменить команду zg (командный режим)
zw;Удалить слово из словаря (командный режим)
zuw;Отменить команду zw (командный режим)
:set spelllang=ru;Задать язык проверки (Настройки)
~/.vim/spell/ru.utf-8.spl;Словарь по умолчанию (Настройки)
:set spellfile=~/.vim/spell/ru.utf-8.add;Задать 1-й отдельный словарь для добавления/удаления слов zg zw (Настройки)
:set spellfile+=terms.utf-8.add;Задать 2-й отдельный словарь для терминов в папке с проектом (Настройки)
2zg;Добавить слово во 2-й словарь терминов (командный режим)
http://ftp.vim.org/vim/runtime/spell/;Ссылка на словари
:set nospell;Отключить проверку орфографии (Настройки)
ds{обёртка};Удалить обёртку
cs{обёртка}{обёртка};Сменит обёртку
ys{text object}{обёртка};Обернуть объект
{visual}S{обёртка};Обернуть выделение
:tabnew;Открыть новую вкладку
:tabe[dit] {filename};Открыть {filename} в новой вкладке
:tabc[lose];Закрыть вкладку
:tabo[nly];Закрыть все вкладки кроме текущей
gt;Следующая вкладка
gT;Предыдущая вкладка
{N}gt;Перейти к вкладке {N}
<C-w>T;Переместить окно в таб
:0tabm[ove];Переместить таб вначало
:tabm[ove];Переместить таб вконец
:-tabm[ove];Переместить таб влево
:+tabm[ove];Переместить таб вправо
CTRL-W hjkl;Переход по окнам
CTRL-W HJKL;Переместить окно
CTRL-W s;Разделить окно горизонтально
CTRL-W n;Создать новое окно
CTRL-W v;Разделить окно вертикально
CTRL-W r;Вращать окна
CTRL-W T;Окно в таб
CTRL-W w;Рекурсивный обход окон
CTRL-W =;Выровнять размеры окон
CTRL-W +;Увеличить ВЫСОТУ окна на 1 строку
CTRL-W -;Уменьшить ВЫСОТУ окна на 1 строку
CTRL-W >;Увеличить ШИРИНУ окна на 1 строку
CTRL-W <;Уменьшить ШИРИНУ окна на 1 строку
CTRL-W _;Увеличить ВЫСОТУ окна до предела
CTRL-W |;Увеличить ШИРИНУ окна до предела
CTRL-W o;Закрыть все окна кроме активного
CTRL-W c;Закрыть окно
:on[ly];Закрыть все окна кроме активного
:clo[se];Закрыть окно
:term bash;Открыть окно терминала
vim -o file1 file2;Запустить vim несколько файлов в разных окнах
Ширина моего монитора Acer в строках?;214
